@using Belarus1.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model AUTHDBContext
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv
@inject SignInManager<BelarusUser> SignInManager
@inject UserManager<BelarusUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
<style>
.card {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  max-width: 300px;
  margin: auto;
  text-align: center;
  font-family: arial;
}

.price {
  color: grey;
  font-size: 22px;
}

.card button {
  border: none;
  outline: 0;
  padding: 12px;
  color: white;
  background-color: #000;
  text-align: center;
  cursor: pointer;
  width: 100%;
  font-size: 18px;
}

.card button:hover {
  opacity: 0.7;
}

.notification {
  background-color: #555;
  color: white;
  text-decoration: none;
  padding: 15px 26px;
  position: relative;
  display: inline-block;
  border-radius: 2px;
}

.notification:hover {
  background: red;
}

.notification .badge {
  position: absolute;
  top: -10px;
  right: -10px;
  padding: 5px 10px;
  border-radius: 50%;
  background: red;
  color: white;
}

* {
  box-sizing: border-box;
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

.column {
  float: left;
  width: 25%;
  padding: 0 10px;
}

.row {margin: 0 -5px;}

.row:after {
  content: "";
  display: table;
  clear: both;
}

@@ media screen and (max-width: 600px) {
  .column {
    width: 100%;
    display: block;
    margin-bottom: 20px;
  }
}
 a {
        float: left;
        text-align: center;
        
        color: green;
        text-decoration: none;
        font-size: 17px;
    }

</style>
</head>
</html>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>



    <div class="row"></div>
    @foreach(var type in Model.TypeOfFoods.OrderByDescending(p=>p.Name))
            {
        <div class="row">
            <h3 align="left">@type.Name</h3>
    @foreach(var item in Model.Foods){
                    if (item.TypeId == type.Id)
                    {
       <div class="column">        
                        
                    <div class="card">
            
        @{var base64 = Convert.ToBase64String(item.Image);
        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
        <img src="@imgSrc" alt="Avatar" style="width:100%">
                <h1>@item.Name</h1>
                <h5>@item.Weight г</h5>
                var price = @Convert.ToDouble(item.Price) + " руб.";
                <p class="price">@price</p>
        string description="";
        @foreach(var ingredient in Model.FoodIngredients.Where(p=>p.FoodId==item.Id).Select(p=>p.Ingredient)){
            description += ingredient.Name + ", ";
        }}
        <p>@description.Remove(description.Length-2)</p>
          @if(SignInManager.IsSignedIn(User)){
            <p><button  onclick="getInfo(@item.Id)">Добавить в корзину</button> </p>
          }
                            
        
        </div>
        </div>
                    }
        }
        </div>
            }
    
