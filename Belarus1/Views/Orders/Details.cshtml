@using Belarus1.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model Belarus1.AUTHDBContext
@inject SignInManager<BelarusUser> SignInManager
@inject UserManager<BelarusUser> UserManager

@{
    ViewData["Title"] = "Details";
}
<!DOCTYPE html>
<html>
<head>
<style>

.column {
  float: left;
  width: 25%;
  padding: 0 10px;
}

.row {margin: 0 -5px;}

.row:after {
  content: "";
  display: table;
  clear: both;
}


@@ media screen and (max-width: 600px) {
  .column {
    width: 100%;
    display: block;
    margin-bottom: 20px;
  }
}
 a {
        float: left;
        text-align: center;
        
        color: green;
        text-decoration: none;
        font-size: 17px;
    }

</style>
</head>
</html>
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

<h1>История заказов</h1>

@{
    var userId =  UserManager.GetUserId(User);
    float GetTotalPrice(int id)
    {
        float price=0;
        foreach(var item in Model.FoodOrders.Where(p=>p.OrderId==id))
        {
            price += (float)Model.Foods.Where(p=>p.Id==item.FoodId).Select(p=>p.Price).FirstOrDefault() * item.Amount;
        }
       
        return price;
    }
}

<div>
    <div class="column">
        <h4>Активные заказы</h4>


         @foreach(var order in Model.Orders.Where(p => p.UserId == userId ))
        {
            if (order.Status == false)
            {
            <div class="row">
                <div class="column">
                <h3><i class="fa fa-times" aria-hidden="true"></i></h3>
                </div>
                <div class="column">
                  <nobr>Код подтверждения: @order.Code</nobr> 
                    @order.OrderTime.ToShortDateString(), @order.OrderTime.ToShortTimeString()
                     @foreach(var food in Model.FoodOrders.Where(p=>p.OrderId==order.Id)){
                            var foodName = Model.Foods.Where(p => p.Id == food.FoodId).Select(p => p.Name).FirstOrDefault();
                            string all = foodName + " " + food.Amount;
                           <nobr>@all</nobr> 
                    }
                </div>
                <div class="column">
                    <h2/>
                </div>
                <div class="column">
                    <h3>&nbsp;</h3>
            
                    @GetTotalPrice(order.Id) руб.
                    </div>
                <hr align="center"/>
            
            </div>
            }
        }
    </div>
    <div class="column">
        <h3></h3>
    </div>
    <div class="column">
        <h4>Завершенные заказы</h4>
         
          @foreach(var order in Model.Orders.Where(p => p.UserId == userId ))
        {
            if (order.Status != false)
            {
            <div class="row">
                <div class="column">
                <h3><i class="fa fa-check" aria-hidden="true"></i></h3>
                </div>
                <div class="column">
                   <nobr>Код подтверждения: @order.Code</nobr> 
                    @order.OrderTime.ToShortDateString(), @order.OrderTime.ToShortTimeString()
                    
                    @foreach(var food in Model.FoodOrders.Where(p=>p.OrderId==order.Id)){
                            var foodName = Model.Foods.Where(p => p.Id == food.FoodId).Select(p => p.Name).FirstOrDefault();
                            string all = foodName + " " + food.Amount;
                           <nobr>@all</nobr> 
                    }
                </div>
                <div class="column">
                    <h2/>
                </div>
                <div class="column">
                    <h3>&nbsp;</h3>
                    @GetTotalPrice(order.Id) руб.
                    </div>
                <hr align="center"/>
               
            </div>
            }
        }
    </div>

</div>

